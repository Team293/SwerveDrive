// RobotBuilder Version: 3.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot.commands;

import edu.wpi.first.math.geometry.Translation2d;
import edu.wpi.first.math.geometry.Rotation2d;
import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.lib.util.PIDHelper;
import frc.lib.util.SPIKE293Utils;
import frc.robot.subsystems.Drivetrain;

/**
 *
 */
public class SetYaw extends CommandBase {
    private final Drivetrain m_drivetrain;
    private final double m_degrees;
    private final PIDHelper m_pidHelper;

    // PID constants (tune these!)
    private final double KP = 0;
    private final double KI = 0;
    private final double KD = 0;

    private final double DT = 0.020;

    public SetYaw(Drivetrain drivetrain, double degrees) {
        m_drivetrain = drivetrain;
        m_degrees = degrees;
        m_pidHelper = new PIDHelper(KP, KI, KD);

        addRequirements(m_drivetrain);
    }

    // Called when the command is initially scheduled.
    @Override
    public void initialize() {
    }

    // Called every time the scheduler runs while the command is scheduled.
    @Override
    public void execute() {
        double yawError = SPIKE293Utils.wrapDegrees(m_drivetrain.getYaw().getDegrees() - m_degrees);
        boolean isClockwise = yawError < 180;
        double actualYawError = Math.min(yawError, 360 - yawError);
        double yawDifference = actualYawError * (isClockwise ? 1 : -1);
        double degreesToRotate = m_pidHelper.step(yawDifference, DT);
        m_drivetrain.drive(new Translation2d(), Rotation2d.fromDegrees(degreesToRotate), false, true);
    }
}
